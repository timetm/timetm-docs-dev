(function(root) {

    var bhIndex = null;
    var rootPath = '';
    var treeHtml = '    <ul>                <li data-name="namespace:" class="opened">                    <div style="padding-left:0px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href=".html">TimeTM</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="namespace:TimeTM_CoreBundle" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="TimeTM/CoreBundle.html">CoreBundle</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="namespace:TimeTM_CoreBundle_Controller" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="TimeTM/CoreBundle/Controller.html">Controller</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:TimeTM_CoreBundle_Controller_AgendaController" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Controller/AgendaController.html">AgendaController</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Controller_CalendarController" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Controller/CalendarController.html">CalendarController</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Controller_ContactController" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Controller/ContactController.html">ContactController</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Controller_DashboardController" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Controller/DashboardController.html">DashboardController</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Controller_EventController" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Controller/EventController.html">EventController</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href=".html">DataFixtures</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="namespace:TimeTM_CoreBundle_DataFixtures_ORM" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="TimeTM/CoreBundle/DataFixtures/ORM.html">ORM</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:TimeTM_CoreBundle_DataFixtures_ORM_LoadContactData" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="TimeTM/CoreBundle/DataFixtures/ORM/LoadContactData.html">LoadContactData</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_DataFixtures_ORM_LoadUserData" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="TimeTM/CoreBundle/DataFixtures/ORM/LoadUserData.html">LoadUserData</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                            <li data-name="namespace:TimeTM_CoreBundle_DependencyInjection" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="TimeTM/CoreBundle/DependencyInjection.html">DependencyInjection</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:TimeTM_CoreBundle_DependencyInjection_TimeTMCoreExtension" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/DependencyInjection/TimeTMCoreExtension.html">TimeTMCoreExtension</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:TimeTM_CoreBundle_Entity" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="TimeTM/CoreBundle/Entity.html">Entity</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:TimeTM_CoreBundle_Entity_Agenda" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Entity/Agenda.html">Agenda</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Entity_AgendaRepository" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Entity/AgendaRepository.html">AgendaRepository</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Entity_Contact" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Entity/Contact.html">Contact</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Entity_Event" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Entity/Event.html">Event</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Entity_EventRepository" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Entity/EventRepository.html">EventRepository</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Entity_User" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Entity/User.html">User</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:TimeTM_CoreBundle_EventListener" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="TimeTM/CoreBundle/EventListener.html">EventListener</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:TimeTM_CoreBundle_EventListener_RegistrationCompletedListener" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/EventListener/RegistrationCompletedListener.html">RegistrationCompletedListener</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:TimeTM_CoreBundle_Form" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="TimeTM/CoreBundle/Form.html">Form</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="namespace:TimeTM_CoreBundle_Form_Type" >                    <div style="padding-left:54px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="TimeTM/CoreBundle/Form/Type.html">Type</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:TimeTM_CoreBundle_Form_Type_AgendaType" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Form/Type/AgendaType.html">AgendaType</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Form_Type_ContactType" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Form/Type/ContactType.html">ContactType</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Form_Type_EventType" >                    <div style="padding-left:80px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Form/Type/EventType.html">EventType</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Form_ContactsTransformer" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Form/ContactsTransformer.html">ContactsTransformer</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:TimeTM_CoreBundle_Helper" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="TimeTM/CoreBundle/Helper.html">Helper</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:TimeTM_CoreBundle_Helper_CalendarHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Helper/CalendarHelper.html">CalendarHelper</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Helper_ContactHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Helper/ContactHelper.html">ContactHelper</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Helper_EventHelper" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Helper/EventHelper.html">EventHelper</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:TimeTM_CoreBundle_Model" >                    <div style="padding-left:36px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="TimeTM/CoreBundle/Model.html">Model</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:TimeTM_CoreBundle_Model_Calendar" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Model/Calendar.html">Calendar</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Model_CalendarDay" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Model/CalendarDay.html">CalendarDay</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Model_CalendarMonth" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Model/CalendarMonth.html">CalendarMonth</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Model_CalendarWeek" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Model/CalendarWeek.html">CalendarWeek</a>                    </div>                </li>                            <li data-name="class:TimeTM_CoreBundle_Model_Times" >                    <div style="padding-left:62px" class="hd leaf">                        <a href="TimeTM/CoreBundle/Model/Times.html">Times</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="class:TimeTM_CoreBundle_TimeTMCoreBundle" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="TimeTM/CoreBundle/TimeTMCoreBundle.html">TimeTMCoreBundle</a>                    </div>                </li>                </ul></div>                </li>                            <li data-name="namespace:TimeTM_UserBundle" class="opened">                    <div style="padding-left:18px" class="hd">                        <span class="glyphicon glyphicon-play"></span><a href="TimeTM/UserBundle.html">UserBundle</a>                    </div>                    <div class="bd">                            <ul>                <li data-name="class:TimeTM_UserBundle_TimeTMUserBundle" >                    <div style="padding-left:44px" class="hd leaf">                        <a href="TimeTM/UserBundle/TimeTMUserBundle.html">TimeTMUserBundle</a>                    </div>                </li>                </ul></div>                </li>                </ul></div>                </li>                </ul>';

    var searchTypeClasses = {
        'Namespace': 'label-default',
        'Class': 'label-info',
        'Interface': 'label-primary',
        'Trait': 'label-success',
        'Method': 'label-danger',
        '_': 'label-warning'
    };

    var searchIndex = [
                    {"type": "Namespace", "link": "TimeTM.html", "name": "TimeTM", "doc": "Namespace TimeTM"},{"type": "Namespace", "link": "TimeTM/CoreBundle.html", "name": "TimeTM\\CoreBundle", "doc": "Namespace TimeTM\\CoreBundle"},{"type": "Namespace", "link": "TimeTM/CoreBundle/Controller.html", "name": "TimeTM\\CoreBundle\\Controller", "doc": "Namespace TimeTM\\CoreBundle\\Controller"},{"type": "Namespace", "link": "TimeTM/CoreBundle/DataFixtures.html", "name": "TimeTM\\CoreBundle\\DataFixtures", "doc": "Namespace TimeTM\\CoreBundle\\DataFixtures"},{"type": "Namespace", "link": "TimeTM/CoreBundle/DataFixtures/ORM.html", "name": "TimeTM\\CoreBundle\\DataFixtures\\ORM", "doc": "Namespace TimeTM\\CoreBundle\\DataFixtures\\ORM"},{"type": "Namespace", "link": "TimeTM/CoreBundle/DependencyInjection.html", "name": "TimeTM\\CoreBundle\\DependencyInjection", "doc": "Namespace TimeTM\\CoreBundle\\DependencyInjection"},{"type": "Namespace", "link": "TimeTM/CoreBundle/Entity.html", "name": "TimeTM\\CoreBundle\\Entity", "doc": "Namespace TimeTM\\CoreBundle\\Entity"},{"type": "Namespace", "link": "TimeTM/CoreBundle/EventListener.html", "name": "TimeTM\\CoreBundle\\EventListener", "doc": "Namespace TimeTM\\CoreBundle\\EventListener"},{"type": "Namespace", "link": "TimeTM/CoreBundle/Form.html", "name": "TimeTM\\CoreBundle\\Form", "doc": "Namespace TimeTM\\CoreBundle\\Form"},{"type": "Namespace", "link": "TimeTM/CoreBundle/Form/Type.html", "name": "TimeTM\\CoreBundle\\Form\\Type", "doc": "Namespace TimeTM\\CoreBundle\\Form\\Type"},{"type": "Namespace", "link": "TimeTM/CoreBundle/Helper.html", "name": "TimeTM\\CoreBundle\\Helper", "doc": "Namespace TimeTM\\CoreBundle\\Helper"},{"type": "Namespace", "link": "TimeTM/CoreBundle/Model.html", "name": "TimeTM\\CoreBundle\\Model", "doc": "Namespace TimeTM\\CoreBundle\\Model"},{"type": "Namespace", "link": "TimeTM/UserBundle.html", "name": "TimeTM\\UserBundle", "doc": "Namespace TimeTM\\UserBundle"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Controller", "fromLink": "TimeTM/CoreBundle/Controller.html", "link": "TimeTM/CoreBundle/Controller/AgendaController.html", "name": "TimeTM\\CoreBundle\\Controller\\AgendaController", "doc": "&quot;Agenda controller.&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\AgendaController", "fromLink": "TimeTM/CoreBundle/Controller/AgendaController.html", "link": "TimeTM/CoreBundle/Controller/AgendaController.html#method_indexAction", "name": "TimeTM\\CoreBundle\\Controller\\AgendaController::indexAction", "doc": "&quot;Lists all Agenda entities.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\AgendaController", "fromLink": "TimeTM/CoreBundle/Controller/AgendaController.html", "link": "TimeTM/CoreBundle/Controller/AgendaController.html#method_createAction", "name": "TimeTM\\CoreBundle\\Controller\\AgendaController::createAction", "doc": "&quot;Creates a new Agenda entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\AgendaController", "fromLink": "TimeTM/CoreBundle/Controller/AgendaController.html", "link": "TimeTM/CoreBundle/Controller/AgendaController.html#method_createCreateForm", "name": "TimeTM\\CoreBundle\\Controller\\AgendaController::createCreateForm", "doc": "&quot;Creates a form to create a Agenda entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\AgendaController", "fromLink": "TimeTM/CoreBundle/Controller/AgendaController.html", "link": "TimeTM/CoreBundle/Controller/AgendaController.html#method_newAction", "name": "TimeTM\\CoreBundle\\Controller\\AgendaController::newAction", "doc": "&quot;Displays a form to create a new Agenda entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\AgendaController", "fromLink": "TimeTM/CoreBundle/Controller/AgendaController.html", "link": "TimeTM/CoreBundle/Controller/AgendaController.html#method_showAction", "name": "TimeTM\\CoreBundle\\Controller\\AgendaController::showAction", "doc": "&quot;Finds and displays a Agenda entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\AgendaController", "fromLink": "TimeTM/CoreBundle/Controller/AgendaController.html", "link": "TimeTM/CoreBundle/Controller/AgendaController.html#method_editAction", "name": "TimeTM\\CoreBundle\\Controller\\AgendaController::editAction", "doc": "&quot;Displays a form to edit an existing Agenda entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\AgendaController", "fromLink": "TimeTM/CoreBundle/Controller/AgendaController.html", "link": "TimeTM/CoreBundle/Controller/AgendaController.html#method_createEditForm", "name": "TimeTM\\CoreBundle\\Controller\\AgendaController::createEditForm", "doc": "&quot;Creates a form to edit a Agenda entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\AgendaController", "fromLink": "TimeTM/CoreBundle/Controller/AgendaController.html", "link": "TimeTM/CoreBundle/Controller/AgendaController.html#method_updateAction", "name": "TimeTM\\CoreBundle\\Controller\\AgendaController::updateAction", "doc": "&quot;Edits an existing Agenda entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\AgendaController", "fromLink": "TimeTM/CoreBundle/Controller/AgendaController.html", "link": "TimeTM/CoreBundle/Controller/AgendaController.html#method_deleteAction", "name": "TimeTM\\CoreBundle\\Controller\\AgendaController::deleteAction", "doc": "&quot;Deletes a Agenda entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\AgendaController", "fromLink": "TimeTM/CoreBundle/Controller/AgendaController.html", "link": "TimeTM/CoreBundle/Controller/AgendaController.html#method_createDeleteForm", "name": "TimeTM\\CoreBundle\\Controller\\AgendaController::createDeleteForm", "doc": "&quot;Creates a form to delete a Agenda entity by id.&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Controller", "fromLink": "TimeTM/CoreBundle/Controller.html", "link": "TimeTM/CoreBundle/Controller/CalendarController.html", "name": "TimeTM\\CoreBundle\\Controller\\CalendarController", "doc": "&quot;Calendar controller.&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\CalendarController", "fromLink": "TimeTM/CoreBundle/Controller/CalendarController.html", "link": "TimeTM/CoreBundle/Controller/CalendarController.html#method_monthAction", "name": "TimeTM\\CoreBundle\\Controller\\CalendarController::monthAction", "doc": "&quot;Create a calendar month&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\CalendarController", "fromLink": "TimeTM/CoreBundle/Controller/CalendarController.html", "link": "TimeTM/CoreBundle/Controller/CalendarController.html#method_dayAction", "name": "TimeTM\\CoreBundle\\Controller\\CalendarController::dayAction", "doc": "&quot;Create a calendar day&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\CalendarController", "fromLink": "TimeTM/CoreBundle/Controller/CalendarController.html", "link": "TimeTM/CoreBundle/Controller/CalendarController.html#method_weekAction", "name": "TimeTM\\CoreBundle\\Controller\\CalendarController::weekAction", "doc": "&quot;Create a calendar week&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Controller", "fromLink": "TimeTM/CoreBundle/Controller.html", "link": "TimeTM/CoreBundle/Controller/ContactController.html", "name": "TimeTM\\CoreBundle\\Controller\\ContactController", "doc": "&quot;Contact controller.&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\ContactController", "fromLink": "TimeTM/CoreBundle/Controller/ContactController.html", "link": "TimeTM/CoreBundle/Controller/ContactController.html#method_indexAction", "name": "TimeTM\\CoreBundle\\Controller\\ContactController::indexAction", "doc": "&quot;Lists all Contact entities.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\ContactController", "fromLink": "TimeTM/CoreBundle/Controller/ContactController.html", "link": "TimeTM/CoreBundle/Controller/ContactController.html#method_createAction", "name": "TimeTM\\CoreBundle\\Controller\\ContactController::createAction", "doc": "&quot;Creates a new Contact entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\ContactController", "fromLink": "TimeTM/CoreBundle/Controller/ContactController.html", "link": "TimeTM/CoreBundle/Controller/ContactController.html#method_createCreateForm", "name": "TimeTM\\CoreBundle\\Controller\\ContactController::createCreateForm", "doc": "&quot;Creates a form to create a Contact entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\ContactController", "fromLink": "TimeTM/CoreBundle/Controller/ContactController.html", "link": "TimeTM/CoreBundle/Controller/ContactController.html#method_newAction", "name": "TimeTM\\CoreBundle\\Controller\\ContactController::newAction", "doc": "&quot;Displays a form to create a new Contact entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\ContactController", "fromLink": "TimeTM/CoreBundle/Controller/ContactController.html", "link": "TimeTM/CoreBundle/Controller/ContactController.html#method_showAction", "name": "TimeTM\\CoreBundle\\Controller\\ContactController::showAction", "doc": "&quot;Finds and displays a Contact entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\ContactController", "fromLink": "TimeTM/CoreBundle/Controller/ContactController.html", "link": "TimeTM/CoreBundle/Controller/ContactController.html#method_editAction", "name": "TimeTM\\CoreBundle\\Controller\\ContactController::editAction", "doc": "&quot;Displays a form to edit an existing Contact entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\ContactController", "fromLink": "TimeTM/CoreBundle/Controller/ContactController.html", "link": "TimeTM/CoreBundle/Controller/ContactController.html#method_createEditForm", "name": "TimeTM\\CoreBundle\\Controller\\ContactController::createEditForm", "doc": "&quot;Creates a form to edit a Contact entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\ContactController", "fromLink": "TimeTM/CoreBundle/Controller/ContactController.html", "link": "TimeTM/CoreBundle/Controller/ContactController.html#method_updateAction", "name": "TimeTM\\CoreBundle\\Controller\\ContactController::updateAction", "doc": "&quot;Edits an existing Contact entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\ContactController", "fromLink": "TimeTM/CoreBundle/Controller/ContactController.html", "link": "TimeTM/CoreBundle/Controller/ContactController.html#method_deleteAction", "name": "TimeTM\\CoreBundle\\Controller\\ContactController::deleteAction", "doc": "&quot;Deletes a Contact entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\ContactController", "fromLink": "TimeTM/CoreBundle/Controller/ContactController.html", "link": "TimeTM/CoreBundle/Controller/ContactController.html#method_createDeleteForm", "name": "TimeTM\\CoreBundle\\Controller\\ContactController::createDeleteForm", "doc": "&quot;Creates a form to delete a Contact entity by id.&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Controller", "fromLink": "TimeTM/CoreBundle/Controller.html", "link": "TimeTM/CoreBundle/Controller/DashboardController.html", "name": "TimeTM\\CoreBundle\\Controller\\DashboardController", "doc": "&quot;Dashboard controller.&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\DashboardController", "fromLink": "TimeTM/CoreBundle/Controller/DashboardController.html", "link": "TimeTM/CoreBundle/Controller/DashboardController.html#method_indexAction", "name": "TimeTM\\CoreBundle\\Controller\\DashboardController::indexAction", "doc": "&quot;Empty home page&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Controller", "fromLink": "TimeTM/CoreBundle/Controller.html", "link": "TimeTM/CoreBundle/Controller/EventController.html", "name": "TimeTM\\CoreBundle\\Controller\\EventController", "doc": "&quot;Event controller.&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\EventController", "fromLink": "TimeTM/CoreBundle/Controller/EventController.html", "link": "TimeTM/CoreBundle/Controller/EventController.html#method_indexAction", "name": "TimeTM\\CoreBundle\\Controller\\EventController::indexAction", "doc": "&quot;Lists all Event entities.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\EventController", "fromLink": "TimeTM/CoreBundle/Controller/EventController.html", "link": "TimeTM/CoreBundle/Controller/EventController.html#method_createAction", "name": "TimeTM\\CoreBundle\\Controller\\EventController::createAction", "doc": "&quot;Creates a new Event entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\EventController", "fromLink": "TimeTM/CoreBundle/Controller/EventController.html", "link": "TimeTM/CoreBundle/Controller/EventController.html#method_createCreateForm", "name": "TimeTM\\CoreBundle\\Controller\\EventController::createCreateForm", "doc": "&quot;Creates a form to create a Event entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\EventController", "fromLink": "TimeTM/CoreBundle/Controller/EventController.html", "link": "TimeTM/CoreBundle/Controller/EventController.html#method_newAction", "name": "TimeTM\\CoreBundle\\Controller\\EventController::newAction", "doc": "&quot;Displays a form to create a new Event entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\EventController", "fromLink": "TimeTM/CoreBundle/Controller/EventController.html", "link": "TimeTM/CoreBundle/Controller/EventController.html#method_showAction", "name": "TimeTM\\CoreBundle\\Controller\\EventController::showAction", "doc": "&quot;Finds and displays a Event entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\EventController", "fromLink": "TimeTM/CoreBundle/Controller/EventController.html", "link": "TimeTM/CoreBundle/Controller/EventController.html#method_editAction", "name": "TimeTM\\CoreBundle\\Controller\\EventController::editAction", "doc": "&quot;Displays a form to edit an existing Event entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\EventController", "fromLink": "TimeTM/CoreBundle/Controller/EventController.html", "link": "TimeTM/CoreBundle/Controller/EventController.html#method_createEditForm", "name": "TimeTM\\CoreBundle\\Controller\\EventController::createEditForm", "doc": "&quot;Creates a form to edit a Event entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\EventController", "fromLink": "TimeTM/CoreBundle/Controller/EventController.html", "link": "TimeTM/CoreBundle/Controller/EventController.html#method_updateAction", "name": "TimeTM\\CoreBundle\\Controller\\EventController::updateAction", "doc": "&quot;Edits an existing Event entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\EventController", "fromLink": "TimeTM/CoreBundle/Controller/EventController.html", "link": "TimeTM/CoreBundle/Controller/EventController.html#method_deleteAction", "name": "TimeTM\\CoreBundle\\Controller\\EventController::deleteAction", "doc": "&quot;Deletes a Event entity.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Controller\\EventController", "fromLink": "TimeTM/CoreBundle/Controller/EventController.html", "link": "TimeTM/CoreBundle/Controller/EventController.html#method_createDeleteForm", "name": "TimeTM\\CoreBundle\\Controller\\EventController::createDeleteForm", "doc": "&quot;Creates a form to delete a Event entity by id.&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\DataFixtures\\ORM", "fromLink": "TimeTM/CoreBundle/DataFixtures/ORM.html", "link": "TimeTM/CoreBundle/DataFixtures/ORM/LoadContactData.html", "name": "TimeTM\\CoreBundle\\DataFixtures\\ORM\\LoadContactData", "doc": "&quot;Contact fixture&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\DataFixtures\\ORM\\LoadContactData", "fromLink": "TimeTM/CoreBundle/DataFixtures/ORM/LoadContactData.html", "link": "TimeTM/CoreBundle/DataFixtures/ORM/LoadContactData.html#method_load", "name": "TimeTM\\CoreBundle\\DataFixtures\\ORM\\LoadContactData::load", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\DataFixtures\\ORM\\LoadContactData", "fromLink": "TimeTM/CoreBundle/DataFixtures/ORM/LoadContactData.html", "link": "TimeTM/CoreBundle/DataFixtures/ORM/LoadContactData.html#method_getOrder", "name": "TimeTM\\CoreBundle\\DataFixtures\\ORM\\LoadContactData::getOrder", "doc": "&quot;{@inheritDoc}&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\DataFixtures\\ORM", "fromLink": "TimeTM/CoreBundle/DataFixtures/ORM.html", "link": "TimeTM/CoreBundle/DataFixtures/ORM/LoadUserData.html", "name": "TimeTM\\CoreBundle\\DataFixtures\\ORM\\LoadUserData", "doc": "&quot;User fixture&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\DataFixtures\\ORM\\LoadUserData", "fromLink": "TimeTM/CoreBundle/DataFixtures/ORM/LoadUserData.html", "link": "TimeTM/CoreBundle/DataFixtures/ORM/LoadUserData.html#method_load", "name": "TimeTM\\CoreBundle\\DataFixtures\\ORM\\LoadUserData::load", "doc": "&quot;{@inheritDoc}&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\DataFixtures\\ORM\\LoadUserData", "fromLink": "TimeTM/CoreBundle/DataFixtures/ORM/LoadUserData.html", "link": "TimeTM/CoreBundle/DataFixtures/ORM/LoadUserData.html#method_getOrder", "name": "TimeTM\\CoreBundle\\DataFixtures\\ORM\\LoadUserData::getOrder", "doc": "&quot;{@inheritDoc}&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\DependencyInjection", "fromLink": "TimeTM/CoreBundle/DependencyInjection.html", "link": "TimeTM/CoreBundle/DependencyInjection/TimeTMCoreExtension.html", "name": "TimeTM\\CoreBundle\\DependencyInjection\\TimeTMCoreExtension", "doc": "&quot;This is the class that loads and manages your bundle configuration&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\DependencyInjection\\TimeTMCoreExtension", "fromLink": "TimeTM/CoreBundle/DependencyInjection/TimeTMCoreExtension.html", "link": "TimeTM/CoreBundle/DependencyInjection/TimeTMCoreExtension.html#method_load", "name": "TimeTM\\CoreBundle\\DependencyInjection\\TimeTMCoreExtension::load", "doc": "&quot;{@inheritdoc}&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Entity", "fromLink": "TimeTM/CoreBundle/Entity.html", "link": "TimeTM/CoreBundle/Entity/Agenda.html", "name": "TimeTM\\CoreBundle\\Entity\\Agenda", "doc": "&quot;class representing an Agenda&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Agenda", "fromLink": "TimeTM/CoreBundle/Entity/Agenda.html", "link": "TimeTM/CoreBundle/Entity/Agenda.html#method___toString", "name": "TimeTM\\CoreBundle\\Entity\\Agenda::__toString", "doc": "&quot;stringify&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Agenda", "fromLink": "TimeTM/CoreBundle/Entity/Agenda.html", "link": "TimeTM/CoreBundle/Entity/Agenda.html#method_getId", "name": "TimeTM\\CoreBundle\\Entity\\Agenda::getId", "doc": "&quot;Get id&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Agenda", "fromLink": "TimeTM/CoreBundle/Entity/Agenda.html", "link": "TimeTM/CoreBundle/Entity/Agenda.html#method_setUser", "name": "TimeTM\\CoreBundle\\Entity\\Agenda::setUser", "doc": "&quot;Set user&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Agenda", "fromLink": "TimeTM/CoreBundle/Entity/Agenda.html", "link": "TimeTM/CoreBundle/Entity/Agenda.html#method_getUser", "name": "TimeTM\\CoreBundle\\Entity\\Agenda::getUser", "doc": "&quot;Get userId&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Agenda", "fromLink": "TimeTM/CoreBundle/Entity/Agenda.html", "link": "TimeTM/CoreBundle/Entity/Agenda.html#method_setName", "name": "TimeTM\\CoreBundle\\Entity\\Agenda::setName", "doc": "&quot;Set name&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Agenda", "fromLink": "TimeTM/CoreBundle/Entity/Agenda.html", "link": "TimeTM/CoreBundle/Entity/Agenda.html#method_getName", "name": "TimeTM\\CoreBundle\\Entity\\Agenda::getName", "doc": "&quot;Get name&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Agenda", "fromLink": "TimeTM/CoreBundle/Entity/Agenda.html", "link": "TimeTM/CoreBundle/Entity/Agenda.html#method_setDescription", "name": "TimeTM\\CoreBundle\\Entity\\Agenda::setDescription", "doc": "&quot;Set description&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Agenda", "fromLink": "TimeTM/CoreBundle/Entity/Agenda.html", "link": "TimeTM/CoreBundle/Entity/Agenda.html#method_getDescription", "name": "TimeTM\\CoreBundle\\Entity\\Agenda::getDescription", "doc": "&quot;Get description&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Entity", "fromLink": "TimeTM/CoreBundle/Entity.html", "link": "TimeTM/CoreBundle/Entity/AgendaRepository.html", "name": "TimeTM\\CoreBundle\\Entity\\AgendaRepository", "doc": "&quot;AgendaRepository&quot;"},
                    
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Entity", "fromLink": "TimeTM/CoreBundle/Entity.html", "link": "TimeTM/CoreBundle/Entity/Contact.html", "name": "TimeTM\\CoreBundle\\Entity\\Contact", "doc": "&quot;Class representing an Contact&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Contact", "fromLink": "TimeTM/CoreBundle/Entity/Contact.html", "link": "TimeTM/CoreBundle/Entity/Contact.html#method_getId", "name": "TimeTM\\CoreBundle\\Entity\\Contact::getId", "doc": "&quot;Get id&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Contact", "fromLink": "TimeTM/CoreBundle/Entity/Contact.html", "link": "TimeTM/CoreBundle/Entity/Contact.html#method_setLastname", "name": "TimeTM\\CoreBundle\\Entity\\Contact::setLastname", "doc": "&quot;Set lastname&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Contact", "fromLink": "TimeTM/CoreBundle/Entity/Contact.html", "link": "TimeTM/CoreBundle/Entity/Contact.html#method_getLastname", "name": "TimeTM\\CoreBundle\\Entity\\Contact::getLastname", "doc": "&quot;Get lastname&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Contact", "fromLink": "TimeTM/CoreBundle/Entity/Contact.html", "link": "TimeTM/CoreBundle/Entity/Contact.html#method_setFirstname", "name": "TimeTM\\CoreBundle\\Entity\\Contact::setFirstname", "doc": "&quot;Set firstname&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Contact", "fromLink": "TimeTM/CoreBundle/Entity/Contact.html", "link": "TimeTM/CoreBundle/Entity/Contact.html#method_getFirstname", "name": "TimeTM\\CoreBundle\\Entity\\Contact::getFirstname", "doc": "&quot;Get firstname&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Contact", "fromLink": "TimeTM/CoreBundle/Entity/Contact.html", "link": "TimeTM/CoreBundle/Entity/Contact.html#method_setEmail", "name": "TimeTM\\CoreBundle\\Entity\\Contact::setEmail", "doc": "&quot;Set email&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Contact", "fromLink": "TimeTM/CoreBundle/Entity/Contact.html", "link": "TimeTM/CoreBundle/Entity/Contact.html#method_getEmail", "name": "TimeTM\\CoreBundle\\Entity\\Contact::getEmail", "doc": "&quot;Get email&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Contact", "fromLink": "TimeTM/CoreBundle/Entity/Contact.html", "link": "TimeTM/CoreBundle/Entity/Contact.html#method_setPhone", "name": "TimeTM\\CoreBundle\\Entity\\Contact::setPhone", "doc": "&quot;Set phone&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Contact", "fromLink": "TimeTM/CoreBundle/Entity/Contact.html", "link": "TimeTM/CoreBundle/Entity/Contact.html#method_getPhone", "name": "TimeTM\\CoreBundle\\Entity\\Contact::getPhone", "doc": "&quot;Get phone&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Contact", "fromLink": "TimeTM/CoreBundle/Entity/Contact.html", "link": "TimeTM/CoreBundle/Entity/Contact.html#method_setCompany", "name": "TimeTM\\CoreBundle\\Entity\\Contact::setCompany", "doc": "&quot;Set company&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Contact", "fromLink": "TimeTM/CoreBundle/Entity/Contact.html", "link": "TimeTM/CoreBundle/Entity/Contact.html#method_isCompany", "name": "TimeTM\\CoreBundle\\Entity\\Contact::isCompany", "doc": "&quot;Get company&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Contact", "fromLink": "TimeTM/CoreBundle/Entity/Contact.html", "link": "TimeTM/CoreBundle/Entity/Contact.html#method_setCanonicalName", "name": "TimeTM\\CoreBundle\\Entity\\Contact::setCanonicalName", "doc": "&quot;Set canonical_name&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Contact", "fromLink": "TimeTM/CoreBundle/Entity/Contact.html", "link": "TimeTM/CoreBundle/Entity/Contact.html#method_getCanonicalName", "name": "TimeTM\\CoreBundle\\Entity\\Contact::getCanonicalName", "doc": "&quot;Get canonical_name&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Entity", "fromLink": "TimeTM/CoreBundle/Entity.html", "link": "TimeTM/CoreBundle/Entity/Event.html", "name": "TimeTM\\CoreBundle\\Entity\\Event", "doc": "&quot;Class representing an Event&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method___construct", "name": "TimeTM\\CoreBundle\\Entity\\Event::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_getId", "name": "TimeTM\\CoreBundle\\Entity\\Event::getId", "doc": "&quot;Get id&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_setTitle", "name": "TimeTM\\CoreBundle\\Entity\\Event::setTitle", "doc": "&quot;Set title&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_getTitle", "name": "TimeTM\\CoreBundle\\Entity\\Event::getTitle", "doc": "&quot;Get title&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_setPlace", "name": "TimeTM\\CoreBundle\\Entity\\Event::setPlace", "doc": "&quot;Set place&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_getPlace", "name": "TimeTM\\CoreBundle\\Entity\\Event::getPlace", "doc": "&quot;Get place&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_setDescription", "name": "TimeTM\\CoreBundle\\Entity\\Event::setDescription", "doc": "&quot;Set description&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_getDescription", "name": "TimeTM\\CoreBundle\\Entity\\Event::getDescription", "doc": "&quot;Get description&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_setStartdate", "name": "TimeTM\\CoreBundle\\Entity\\Event::setStartdate", "doc": "&quot;Set startdate&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_getStartdate", "name": "TimeTM\\CoreBundle\\Entity\\Event::getStartdate", "doc": "&quot;Get startdate&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_setEnddate", "name": "TimeTM\\CoreBundle\\Entity\\Event::setEnddate", "doc": "&quot;Set enddate&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_getEnddate", "name": "TimeTM\\CoreBundle\\Entity\\Event::getEnddate", "doc": "&quot;Get enddate&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_setFullday", "name": "TimeTM\\CoreBundle\\Entity\\Event::setFullday", "doc": "&quot;Set fullday&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_getFullday", "name": "TimeTM\\CoreBundle\\Entity\\Event::getFullday", "doc": "&quot;Get fullday&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_setAgenda", "name": "TimeTM\\CoreBundle\\Entity\\Event::setAgenda", "doc": "&quot;Set agenda&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_getAgenda", "name": "TimeTM\\CoreBundle\\Entity\\Event::getAgenda", "doc": "&quot;Get agenda&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_addParticipant", "name": "TimeTM\\CoreBundle\\Entity\\Event::addParticipant", "doc": "&quot;Add participants&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_removeParticipant", "name": "TimeTM\\CoreBundle\\Entity\\Event::removeParticipant", "doc": "&quot;Remove participants&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_getParticipants", "name": "TimeTM\\CoreBundle\\Entity\\Event::getParticipants", "doc": "&quot;Get participants&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_setStarttime", "name": "TimeTM\\CoreBundle\\Entity\\Event::setStarttime", "doc": "&quot;Set starttime&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_getStarttime", "name": "TimeTM\\CoreBundle\\Entity\\Event::getStarttime", "doc": "&quot;Get starttime&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_setEndtime", "name": "TimeTM\\CoreBundle\\Entity\\Event::setEndtime", "doc": "&quot;Set endtime&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\Event", "fromLink": "TimeTM/CoreBundle/Entity/Event.html", "link": "TimeTM/CoreBundle/Entity/Event.html#method_getEndtime", "name": "TimeTM\\CoreBundle\\Entity\\Event::getEndtime", "doc": "&quot;Get endtime&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Entity", "fromLink": "TimeTM/CoreBundle/Entity.html", "link": "TimeTM/CoreBundle/Entity/EventRepository.html", "name": "TimeTM\\CoreBundle\\Entity\\EventRepository", "doc": "&quot;EventRepository&quot;"},
                    
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Entity", "fromLink": "TimeTM/CoreBundle/Entity.html", "link": "TimeTM/CoreBundle/Entity/User.html", "name": "TimeTM\\CoreBundle\\Entity\\User", "doc": "&quot;Implementation of FOS\\UserBundle\\Model\\User&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\User", "fromLink": "TimeTM/CoreBundle/Entity/User.html", "link": "TimeTM/CoreBundle/Entity/User.html#method___construct", "name": "TimeTM\\CoreBundle\\Entity\\User::__construct", "doc": "&quot;stringify&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Entity\\User", "fromLink": "TimeTM/CoreBundle/Entity/User.html", "link": "TimeTM/CoreBundle/Entity/User.html#method_getId", "name": "TimeTM\\CoreBundle\\Entity\\User::getId", "doc": "&quot;Get id&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\EventListener", "fromLink": "TimeTM/CoreBundle/EventListener.html", "link": "TimeTM/CoreBundle/EventListener/RegistrationCompletedListener.html", "name": "TimeTM\\CoreBundle\\EventListener\\RegistrationCompletedListener", "doc": "&quot;Listener responsible for adding the default user role at registration&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\EventListener\\RegistrationCompletedListener", "fromLink": "TimeTM/CoreBundle/EventListener/RegistrationCompletedListener.html", "link": "TimeTM/CoreBundle/EventListener/RegistrationCompletedListener.html#method___construct", "name": "TimeTM\\CoreBundle\\EventListener\\RegistrationCompletedListener::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\EventListener\\RegistrationCompletedListener", "fromLink": "TimeTM/CoreBundle/EventListener/RegistrationCompletedListener.html", "link": "TimeTM/CoreBundle/EventListener/RegistrationCompletedListener.html#method_getSubscribedEvents", "name": "TimeTM\\CoreBundle\\EventListener\\RegistrationCompletedListener::getSubscribedEvents", "doc": "&quot;Get event&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\EventListener\\RegistrationCompletedListener", "fromLink": "TimeTM/CoreBundle/EventListener/RegistrationCompletedListener.html", "link": "TimeTM/CoreBundle/EventListener/RegistrationCompletedListener.html#method_onRegistrationCompleted", "name": "TimeTM\\CoreBundle\\EventListener\\RegistrationCompletedListener::onRegistrationCompleted", "doc": "&quot;Add default agenda to new user&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Form", "fromLink": "TimeTM/CoreBundle/Form.html", "link": "TimeTM/CoreBundle/Form/ContactsTransformer.html", "name": "TimeTM\\CoreBundle\\Form\\ContactsTransformer", "doc": "&quot;Contacts transformer&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\ContactsTransformer", "fromLink": "TimeTM/CoreBundle/Form/ContactsTransformer.html", "link": "TimeTM/CoreBundle/Form/ContactsTransformer.html#method___construct", "name": "TimeTM\\CoreBundle\\Form\\ContactsTransformer::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\ContactsTransformer", "fromLink": "TimeTM/CoreBundle/Form/ContactsTransformer.html", "link": "TimeTM/CoreBundle/Form/ContactsTransformer.html#method_stringToArray", "name": "TimeTM\\CoreBundle\\Form\\ContactsTransformer::stringToArray", "doc": "&quot;Convert string of tags to array.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\ContactsTransformer", "fromLink": "TimeTM/CoreBundle/Form/ContactsTransformer.html", "link": "TimeTM/CoreBundle/Form/ContactsTransformer.html#method_transform", "name": "TimeTM\\CoreBundle\\Form\\ContactsTransformer::transform", "doc": "&quot;Transform collection of contacts to string&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\ContactsTransformer", "fromLink": "TimeTM/CoreBundle/Form/ContactsTransformer.html", "link": "TimeTM/CoreBundle/Form/ContactsTransformer.html#method_reverseTransform", "name": "TimeTM\\CoreBundle\\Form\\ContactsTransformer::reverseTransform", "doc": "&quot;Transform string of contacts to collection of contacts&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Form\\Type", "fromLink": "TimeTM/CoreBundle/Form/Type.html", "link": "TimeTM/CoreBundle/Form/Type/AgendaType.html", "name": "TimeTM\\CoreBundle\\Form\\Type\\AgendaType", "doc": "&quot;Form for Agenda CRUD&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\Type\\AgendaType", "fromLink": "TimeTM/CoreBundle/Form/Type/AgendaType.html", "link": "TimeTM/CoreBundle/Form/Type/AgendaType.html#method_buildForm", "name": "TimeTM\\CoreBundle\\Form\\Type\\AgendaType::buildForm", "doc": "&quot;create the form&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\Type\\AgendaType", "fromLink": "TimeTM/CoreBundle/Form/Type/AgendaType.html", "link": "TimeTM/CoreBundle/Form/Type/AgendaType.html#method_setDefaultOptions", "name": "TimeTM\\CoreBundle\\Form\\Type\\AgendaType::setDefaultOptions", "doc": "&quot;configure OptionsResolverInterface&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\Type\\AgendaType", "fromLink": "TimeTM/CoreBundle/Form/Type/AgendaType.html", "link": "TimeTM/CoreBundle/Form/Type/AgendaType.html#method_getName", "name": "TimeTM\\CoreBundle\\Form\\Type\\AgendaType::getName", "doc": "&quot;get form name&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Form\\Type", "fromLink": "TimeTM/CoreBundle/Form/Type.html", "link": "TimeTM/CoreBundle/Form/Type/ContactType.html", "name": "TimeTM\\CoreBundle\\Form\\Type\\ContactType", "doc": "&quot;Form for Contact CRUD&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\Type\\ContactType", "fromLink": "TimeTM/CoreBundle/Form/Type/ContactType.html", "link": "TimeTM/CoreBundle/Form/Type/ContactType.html#method_buildForm", "name": "TimeTM\\CoreBundle\\Form\\Type\\ContactType::buildForm", "doc": "&quot;create the form&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\Type\\ContactType", "fromLink": "TimeTM/CoreBundle/Form/Type/ContactType.html", "link": "TimeTM/CoreBundle/Form/Type/ContactType.html#method_setDefaultOptions", "name": "TimeTM\\CoreBundle\\Form\\Type\\ContactType::setDefaultOptions", "doc": "&quot;configure OptionsResolverInterface&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\Type\\ContactType", "fromLink": "TimeTM/CoreBundle/Form/Type/ContactType.html", "link": "TimeTM/CoreBundle/Form/Type/ContactType.html#method_getName", "name": "TimeTM\\CoreBundle\\Form\\Type\\ContactType::getName", "doc": "&quot;get form name&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Form\\Type", "fromLink": "TimeTM/CoreBundle/Form/Type.html", "link": "TimeTM/CoreBundle/Form/Type/EventType.html", "name": "TimeTM\\CoreBundle\\Form\\Type\\EventType", "doc": "&quot;Form for Event CRUD&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\Type\\EventType", "fromLink": "TimeTM/CoreBundle/Form/Type/EventType.html", "link": "TimeTM/CoreBundle/Form/Type/EventType.html#method___construct", "name": "TimeTM\\CoreBundle\\Form\\Type\\EventType::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\Type\\EventType", "fromLink": "TimeTM/CoreBundle/Form/Type/EventType.html", "link": "TimeTM/CoreBundle/Form/Type/EventType.html#method_buildForm", "name": "TimeTM\\CoreBundle\\Form\\Type\\EventType::buildForm", "doc": "&quot;create the form&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\Type\\EventType", "fromLink": "TimeTM/CoreBundle/Form/Type/EventType.html", "link": "TimeTM/CoreBundle/Form/Type/EventType.html#method_setDefaultOptions", "name": "TimeTM\\CoreBundle\\Form\\Type\\EventType::setDefaultOptions", "doc": "&quot;configure OptionsResolverInterface&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Form\\Type\\EventType", "fromLink": "TimeTM/CoreBundle/Form/Type/EventType.html", "link": "TimeTM/CoreBundle/Form/Type/EventType.html#method_getName", "name": "TimeTM\\CoreBundle\\Form\\Type\\EventType::getName", "doc": "&quot;get form name&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Helper", "fromLink": "TimeTM/CoreBundle/Helper.html", "link": "TimeTM/CoreBundle/Helper/CalendarHelper.html", "name": "TimeTM\\CoreBundle\\Helper\\CalendarHelper", "doc": "&quot;Helper class for calendar&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Helper\\CalendarHelper", "fromLink": "TimeTM/CoreBundle/Helper/CalendarHelper.html", "link": "TimeTM/CoreBundle/Helper/CalendarHelper.html#method___construct", "name": "TimeTM\\CoreBundle\\Helper\\CalendarHelper::__construct", "doc": "&quot;Constructor&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Helper\\CalendarHelper", "fromLink": "TimeTM/CoreBundle/Helper/CalendarHelper.html", "link": "TimeTM/CoreBundle/Helper/CalendarHelper.html#method_addEventsToCalendar", "name": "TimeTM\\CoreBundle\\Helper\\CalendarHelper::addEventsToCalendar", "doc": "&quot;add events to an array of dates&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Helper\\CalendarHelper", "fromLink": "TimeTM/CoreBundle/Helper/CalendarHelper.html", "link": "TimeTM/CoreBundle/Helper/CalendarHelper.html#method_getBaseTemplateParams", "name": "TimeTM\\CoreBundle\\Helper\\CalendarHelper::getBaseTemplateParams", "doc": "&quot;get common template parameters&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Helper", "fromLink": "TimeTM/CoreBundle/Helper.html", "link": "TimeTM/CoreBundle/Helper/ContactHelper.html", "name": "TimeTM\\CoreBundle\\Helper\\ContactHelper", "doc": "&quot;class representing a weekly calendar&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Helper\\ContactHelper", "fromLink": "TimeTM/CoreBundle/Helper/ContactHelper.html", "link": "TimeTM/CoreBundle/Helper/ContactHelper.html#method_getCanonicalName", "name": "TimeTM\\CoreBundle\\Helper\\ContactHelper::getCanonicalName", "doc": "&quot;create the canonical user name&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Helper\\ContactHelper", "fromLink": "TimeTM/CoreBundle/Helper/ContactHelper.html", "link": "TimeTM/CoreBundle/Helper/ContactHelper.html#method_parseNameField", "name": "TimeTM\\CoreBundle\\Helper\\ContactHelper::parseNameField", "doc": "&quot;parse the name field&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Helper", "fromLink": "TimeTM/CoreBundle/Helper.html", "link": "TimeTM/CoreBundle/Helper/EventHelper.html", "name": "TimeTM\\CoreBundle\\Helper\\EventHelper", "doc": "&quot;Helper class for event&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Helper\\EventHelper", "fromLink": "TimeTM/CoreBundle/Helper/EventHelper.html", "link": "TimeTM/CoreBundle/Helper/EventHelper.html#method_fillNewEvent", "name": "TimeTM\\CoreBundle\\Helper\\EventHelper::fillNewEvent", "doc": "&quot;Fill event for form&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Model", "fromLink": "TimeTM/CoreBundle/Model.html", "link": "TimeTM/CoreBundle/Model/Calendar.html", "name": "TimeTM\\CoreBundle\\Model\\Calendar", "doc": "&quot;Abstract class representing a calendar&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method___construct", "name": "TimeTM\\CoreBundle\\Model\\Calendar::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_init", "name": "TimeTM\\CoreBundle\\Model\\Calendar::init", "doc": "&quot;initialize the calendar.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_getYear", "name": "TimeTM\\CoreBundle\\Model\\Calendar::getYear", "doc": "&quot;Get year&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_getMonthName", "name": "TimeTM\\CoreBundle\\Model\\Calendar::getMonthName", "doc": "&quot;Get monthName&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_getYearUrl", "name": "TimeTM\\CoreBundle\\Model\\Calendar::getYearUrl", "doc": "&quot;Get PrevYearUrl&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_getPrevMonthUrl", "name": "TimeTM\\CoreBundle\\Model\\Calendar::getPrevMonthUrl", "doc": "&quot;Get PrevMonthUrl&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_getNextMonthUrl", "name": "TimeTM\\CoreBundle\\Model\\Calendar::getNextMonthUrl", "doc": "&quot;Get NextMonthUrl&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_getDayUrl", "name": "TimeTM\\CoreBundle\\Model\\Calendar::getDayUrl", "doc": "&quot;Get DayUrl&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_getModeChangeUrl", "name": "TimeTM\\CoreBundle\\Model\\Calendar::getModeChangeUrl", "doc": "&quot;Get ModeChangeUrl&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_getMonthCalendarDates", "name": "TimeTM\\CoreBundle\\Model\\Calendar::getMonthCalendarDates", "doc": "&quot;get the dates to display for a monthly view&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_setYear", "name": "TimeTM\\CoreBundle\\Model\\Calendar::setYear", "doc": "&quot;Set year&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_setMonth", "name": "TimeTM\\CoreBundle\\Model\\Calendar::setMonth", "doc": "&quot;Set month&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_setMonthName", "name": "TimeTM\\CoreBundle\\Model\\Calendar::setMonthName", "doc": "&quot;Set monthName&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_setWeekno", "name": "TimeTM\\CoreBundle\\Model\\Calendar::setWeekno", "doc": "&quot;Set weekno&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_getWeekno", "name": "TimeTM\\CoreBundle\\Model\\Calendar::getWeekno", "doc": "&quot;Get weekno&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_setAdditionnalNavigationParameters", "name": "TimeTM\\CoreBundle\\Model\\Calendar::setAdditionnalNavigationParameters", "doc": "&quot;Set additionnal panel navigation parameters.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_childInit", "name": "TimeTM\\CoreBundle\\Model\\Calendar::childInit", "doc": "&quot;additionnal init.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_getMonth", "name": "TimeTM\\CoreBundle\\Model\\Calendar::getMonth", "doc": "&quot;Get month&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Calendar", "fromLink": "TimeTM/CoreBundle/Model/Calendar.html", "link": "TimeTM/CoreBundle/Model/Calendar.html#method_setPanelNavigationParameters", "name": "TimeTM\\CoreBundle\\Model\\Calendar::setPanelNavigationParameters", "doc": "&quot;Set panel navigation parameters.&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Model", "fromLink": "TimeTM/CoreBundle/Model.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay", "doc": "&quot;Class representing a daily calendar&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method___construct", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method_setAdditionnalNavigationParameters", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::setAdditionnalNavigationParameters", "doc": "&quot;Set additionnal panel navigation parameters.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method_getYesterdayUrl", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::getYesterdayUrl", "doc": "&quot;Get YesterdayUrl&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method_getTomorrowUrl", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::getTomorrowUrl", "doc": "&quot;Get YesterdayUrl&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method_getDay", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::getDay", "doc": "&quot;Get day&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method_getDayName", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::getDayName", "doc": "&quot;Get dayName&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method_getPrevMonthDay", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::getPrevMonthDay", "doc": "&quot;Get prevMonthDay&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method_getNextMonthDay", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::getNextMonthDay", "doc": "&quot;Get nextMonthDay&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method_getCurrentDayStamp", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::getCurrentDayStamp", "doc": "&quot;Get day stamp&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method_childInit", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::childInit", "doc": "&quot;Set additionnal panel navigation parameters.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method_setDay", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::setDay", "doc": "&quot;Set day&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method_setDayName", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::setDayName", "doc": "&quot;Set dayName&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method_setPrevMonthDay", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::setPrevMonthDay", "doc": "&quot;Set prevMonthDay&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarDay", "fromLink": "TimeTM/CoreBundle/Model/CalendarDay.html", "link": "TimeTM/CoreBundle/Model/CalendarDay.html#method_setNextMonthDay", "name": "TimeTM\\CoreBundle\\Model\\CalendarDay::setNextMonthDay", "doc": "&quot;Set NextMonthDay&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Model", "fromLink": "TimeTM/CoreBundle/Model.html", "link": "TimeTM/CoreBundle/Model/CalendarMonth.html", "name": "TimeTM\\CoreBundle\\Model\\CalendarMonth", "doc": "&quot;Class representing a monthly calendar&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarMonth", "fromLink": "TimeTM/CoreBundle/Model/CalendarMonth.html", "link": "TimeTM/CoreBundle/Model/CalendarMonth.html#method___construct", "name": "TimeTM\\CoreBundle\\Model\\CalendarMonth::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarMonth", "fromLink": "TimeTM/CoreBundle/Model/CalendarMonth.html", "link": "TimeTM/CoreBundle/Model/CalendarMonth.html#method_setAdditionnalNavigationParameters", "name": "TimeTM\\CoreBundle\\Model\\CalendarMonth::setAdditionnalNavigationParameters", "doc": "&quot;Set additionnal panel navigation parameters&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarMonth", "fromLink": "TimeTM/CoreBundle/Model/CalendarMonth.html", "link": "TimeTM/CoreBundle/Model/CalendarMonth.html#method_childInit", "name": "TimeTM\\CoreBundle\\Model\\CalendarMonth::childInit", "doc": "&quot;initialize the calendar.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarMonth", "fromLink": "TimeTM/CoreBundle/Model/CalendarMonth.html", "link": "TimeTM/CoreBundle/Model/CalendarMonth.html#method_setDefaultOptions", "name": "TimeTM\\CoreBundle\\Model\\CalendarMonth::setDefaultOptions", "doc": "&quot;configure the options resolver.&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Model", "fromLink": "TimeTM/CoreBundle/Model.html", "link": "TimeTM/CoreBundle/Model/CalendarWeek.html", "name": "TimeTM\\CoreBundle\\Model\\CalendarWeek", "doc": "&quot;Class representing a weekly calendar&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarWeek", "fromLink": "TimeTM/CoreBundle/Model/CalendarWeek.html", "link": "TimeTM/CoreBundle/Model/CalendarWeek.html#method___construct", "name": "TimeTM\\CoreBundle\\Model\\CalendarWeek::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarWeek", "fromLink": "TimeTM/CoreBundle/Model/CalendarWeek.html", "link": "TimeTM/CoreBundle/Model/CalendarWeek.html#method_getWeekCalendarDates", "name": "TimeTM\\CoreBundle\\Model\\CalendarWeek::getWeekCalendarDates", "doc": "&quot;get the dates to display for a weekly view&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarWeek", "fromLink": "TimeTM/CoreBundle/Model/CalendarWeek.html", "link": "TimeTM/CoreBundle/Model/CalendarWeek.html#method_getNextWeekUrl", "name": "TimeTM\\CoreBundle\\Model\\CalendarWeek::getNextWeekUrl", "doc": "&quot;Get NextWeekUrl&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarWeek", "fromLink": "TimeTM/CoreBundle/Model/CalendarWeek.html", "link": "TimeTM/CoreBundle/Model/CalendarWeek.html#method_getPrevWeekUrl", "name": "TimeTM\\CoreBundle\\Model\\CalendarWeek::getPrevWeekUrl", "doc": "&quot;Get PrevWeekUrl&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarWeek", "fromLink": "TimeTM/CoreBundle/Model/CalendarWeek.html", "link": "TimeTM/CoreBundle/Model/CalendarWeek.html#method_getWeekStamp", "name": "TimeTM\\CoreBundle\\Model\\CalendarWeek::getWeekStamp", "doc": "&quot;Get WeekStamp&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarWeek", "fromLink": "TimeTM/CoreBundle/Model/CalendarWeek.html", "link": "TimeTM/CoreBundle/Model/CalendarWeek.html#method_setWeekMonth", "name": "TimeTM\\CoreBundle\\Model\\CalendarWeek::setWeekMonth", "doc": "&quot;Set month&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarWeek", "fromLink": "TimeTM/CoreBundle/Model/CalendarWeek.html", "link": "TimeTM/CoreBundle/Model/CalendarWeek.html#method_childInit", "name": "TimeTM\\CoreBundle\\Model\\CalendarWeek::childInit", "doc": "&quot;initialize the calendar.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarWeek", "fromLink": "TimeTM/CoreBundle/Model/CalendarWeek.html", "link": "TimeTM/CoreBundle/Model/CalendarWeek.html#method_setAdditionnalNavigationParameters", "name": "TimeTM\\CoreBundle\\Model\\CalendarWeek::setAdditionnalNavigationParameters", "doc": "&quot;Set additionnal panel navigation parameters&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarWeek", "fromLink": "TimeTM/CoreBundle/Model/CalendarWeek.html", "link": "TimeTM/CoreBundle/Model/CalendarWeek.html#method_getMonthNameFromMonthNumber", "name": "TimeTM\\CoreBundle\\Model\\CalendarWeek::getMonthNameFromMonthNumber", "doc": "&quot;Get MonthNameFromMonthNumber&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarWeek", "fromLink": "TimeTM/CoreBundle/Model/CalendarWeek.html", "link": "TimeTM/CoreBundle/Model/CalendarWeek.html#method_getFirstDateOfWeek", "name": "TimeTM\\CoreBundle\\Model\\CalendarWeek::getFirstDateOfWeek", "doc": "&quot;Get FirstDateOfWeek&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\CalendarWeek", "fromLink": "TimeTM/CoreBundle/Model/CalendarWeek.html", "link": "TimeTM/CoreBundle/Model/CalendarWeek.html#method_getLastDateOfWeek", "name": "TimeTM\\CoreBundle\\Model\\CalendarWeek::getLastDateOfWeek", "doc": "&quot;Get LastDateOfWeek&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle\\Model", "fromLink": "TimeTM/CoreBundle/Model.html", "link": "TimeTM/CoreBundle/Model/Times.html", "name": "TimeTM\\CoreBundle\\Model\\Times", "doc": "&quot;Class representing day times&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Times", "fromLink": "TimeTM/CoreBundle/Model/Times.html", "link": "TimeTM/CoreBundle/Model/Times.html#method___construct", "name": "TimeTM\\CoreBundle\\Model\\Times::__construct", "doc": "&quot;Constructor.&quot;"},
                    {"type": "Method", "fromName": "TimeTM\\CoreBundle\\Model\\Times", "fromLink": "TimeTM/CoreBundle/Model/Times.html", "link": "TimeTM/CoreBundle/Model/Times.html#method_getDayTimes", "name": "TimeTM\\CoreBundle\\Model\\Times::getDayTimes", "doc": "&quot;get the hours to display for a day view&quot;"},
            
            {"type": "Class", "fromName": "TimeTM\\CoreBundle", "fromLink": "TimeTM/CoreBundle.html", "link": "TimeTM/CoreBundle/TimeTMCoreBundle.html", "name": "TimeTM\\CoreBundle\\TimeTMCoreBundle", "doc": "&quot;TimeTM Core bundle&quot;"},
                    
            {"type": "Class", "fromName": "TimeTM\\UserBundle", "fromLink": "TimeTM/UserBundle.html", "link": "TimeTM/UserBundle/TimeTMUserBundle.html", "name": "TimeTM\\UserBundle\\TimeTMUserBundle", "doc": "&quot;TimeTM Core bundle, extend FOSUserBundle&quot;"},
                                                        {"type": "Method", "fromName": "TimeTM\\UserBundle\\TimeTMUserBundle", "fromLink": "TimeTM/UserBundle/TimeTMUserBundle.html", "link": "TimeTM/UserBundle/TimeTMUserBundle.html#method_getParent", "name": "TimeTM\\UserBundle\\TimeTMUserBundle::getParent", "doc": "&quot;define bundle as FOSUserBundle child&quot;"},
            
            
                                        // Fix trailing commas in the index
        {}
    ];

    /** Tokenizes strings by namespaces and functions */
    function tokenizer(term) {
        if (!term) {
            return [];
        }

        var tokens = [term];
        var meth = term.indexOf('::');

        // Split tokens into methods if "::" is found.
        if (meth > -1) {
            tokens.push(term.substr(meth + 2));
            term = term.substr(0, meth - 2);
        }

        // Split by namespace or fake namespace.
        if (term.indexOf('\\') > -1) {
            tokens = tokens.concat(term.split('\\'));
        } else if (term.indexOf('_') > 0) {
            tokens = tokens.concat(term.split('_'));
        }

        // Merge in splitting the string by case and return
        tokens = tokens.concat(term.match(/(([A-Z]?[^A-Z]*)|([a-z]?[^a-z]*))/g).slice(0,-1));

        return tokens;
    };

    root.Sami = {
        /**
         * Cleans the provided term. If no term is provided, then one is
         * grabbed from the query string "search" parameter.
         */
        cleanSearchTerm: function(term) {
            // Grab from the query string
            if (typeof term === 'undefined') {
                var name = 'search';
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)");
                var results = regex.exec(location.search);
                if (results === null) {
                    return null;
                }
                term = decodeURIComponent(results[1].replace(/\+/g, " "));
            }

            return term.replace(/<(?:.|\n)*?>/gm, '');
        },

        /** Searches through the index for a given term */
        search: function(term) {
            // Create a new search index if needed
            if (!bhIndex) {
                bhIndex = new Bloodhound({
                    limit: 500,
                    local: searchIndex,
                    datumTokenizer: function (d) {
                        return tokenizer(d.name);
                    },
                    queryTokenizer: Bloodhound.tokenizers.whitespace
                });
                bhIndex.initialize();
            }

            results = [];
            bhIndex.get(term, function(matches) {
                results = matches;
            });

            if (!rootPath) {
                return results;
            }

            // Fix the element links based on the current page depth.
            return $.map(results, function(ele) {
                if (ele.link.indexOf('..') > -1) {
                    return ele;
                }
                ele.link = rootPath + ele.link;
                if (ele.fromLink) {
                    ele.fromLink = rootPath + ele.fromLink;
                }
                return ele;
            });
        },

        /** Get a search class for a specific type */
        getSearchClass: function(type) {
            return searchTypeClasses[type] || searchTypeClasses['_'];
        },

        /** Add the left-nav tree to the site */
        injectApiTree: function(ele) {
            ele.html(treeHtml);
        }
    };

    $(function() {
        // Modify the HTML to work correctly based on the current depth
        rootPath = $('body').attr('data-root-path');
        treeHtml = treeHtml.replace(/href="/g, 'href="' + rootPath);
        Sami.injectApiTree($('#api-tree'));
    });

    return root.Sami;
})(window);

$(function() {

    // Enable the version switcher
    $('#version-switcher').change(function() {
        window.location = $(this).val()
    });

    
        // Toggle left-nav divs on click
        $('#api-tree .hd span').click(function() {
            $(this).parent().parent().toggleClass('opened');
        });

        // Expand the parent namespaces of the current page.
        var expected = $('body').attr('data-name');

        if (expected) {
            // Open the currently selected node and its parents.
            var container = $('#api-tree');
            var node = $('#api-tree li[data-name="' + expected + '"]');
            // Node might not be found when simulating namespaces
            if (node.length > 0) {
                node.addClass('active').addClass('opened');
                node.parents('li').addClass('opened');
                var scrollPos = node.offset().top - container.offset().top + container.scrollTop();
                // Position the item nearer to the top of the screen.
                scrollPos -= 200;
                container.scrollTop(scrollPos);
            }
        }

    
    
        var form = $('#search-form .typeahead');
        form.typeahead({
            hint: true,
            highlight: true,
            minLength: 1
        }, {
            name: 'search',
            displayKey: 'name',
            source: function (q, cb) {
                cb(Sami.search(q));
            }
        });

        // The selection is direct-linked when the user selects a suggestion.
        form.on('typeahead:selected', function(e, suggestion) {
            window.location = suggestion.link;
        });

        // The form is submitted when the user hits enter.
        form.keypress(function (e) {
            if (e.which == 13) {
                $('#search-form').submit();
                return true;
            }
        });

    
});


